@mixin font($font-family, $font-file, $font-weight) {
  @font-face {
    font-family: $font-family;
    src: url($font-file + ".woff2") format("woff2");
    font-weight: $font-weight;
    font-style: normal;
    font-display: swap;
  }
}

@mixin maxw($width) {
  max-width: $width;
  margin-left: auto;
  margin-right: auto;
}

@mixin grid {
  @media screen and (min-width: 768px) {
    display: grid;
    grid-template-columns: repeat(8, 1fr);
    column-gap: 2rem;
  }
}

@mixin spaceTop($spacing: 40) {
  > :not(:first-child) {
    margin-top: $spacing;
  }
}

@mixin spaceLeft($spacing: 40) {
  > :not(:first-child) {
    margin-left: $spacing;
  }
}

@mixin border($color: $border-color, $radius: 1.2rem, $width: 0.1rem) {
  border: rem($width) solid $color;
  border-radius: rem($radius);
}

@mixin screenMax($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (max-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
      + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

@mixin screenMin($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
      + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}
